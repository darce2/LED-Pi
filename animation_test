from bibliopixel.led import *
from bibliopixel.drivers.LPD8806 import *
from bibliopixel.animation import *
from bibliopixel import colors as colors
from bibliopixel import *
from strip_animations import *
from time import sleep
import time


global intensity_value

num_lights = 32

driver = DriverLPD8806(num = num_lights, c_order = ChannelOrder.GRB, SPISpeed = 16)
led = LEDStrip(driver)

rainbow = [colors.Red, colors.Orange, colors.Yellow, colors.Purple, colors.Blue, colors.Indigo, colors.Violet, colors.Green]


class darcyAnim(BaseStripAnim):
	def __init__(self, led, start=0, end = num_lights):

		super(darcyAnim, self).__init__(led, start, end)
		self._colors = [colors.Red, colors.Orange, colors.Yellow, colors.Green, colors.Blue, colors.Indigo]

	def step(self, amt= 1):

		for i in range(self._led.numLEDs):
			self._led.set(i, self._colors[(self._step + i) % len(self._colors)])

			self._step += amt



def update_LEDs(intensity_value):
	if intensity_value > 255:
		intensity_value = 255
	elif intensity_value < 0:
		intensity_value = 0
	g = 125
	r = 0
	b = 65	
	while intensity_value < 255:
		led.setMasterBrightness(intensity_value)
		led.update()
		intensity_value = intensity_value + 2
		if intensity_value > 250:
			intensity_value = 75
		r = r + 2
		if r > 255:
			r = 0
		b = b + 2
		if b > 255:
			b = 0
		g = g + 2
		if g > 255:
			g = 0
		
		led.fillRGB(r,g,b, start = 0, end = num_lights)
		led.update()
		time.sleep(0.5)
		

try:
	while True:
		led.all_off()
		led.update()
		led.fillRGB(g = 100, r = 0, b = 100, start = 0, end = num_lights)
		led.update
		time.sleep(1.0)
		led.fillRGB(g = 255, r = 0, b = 0, start = 0, end = num_lights)
		led.update()
		time.sleep(2.0)
		led.update()
		led.all_off()
		led.update()
		update_LEDs(75)  #function to rotate lights (should never get past this)
		led.update
		led.fillRGB(g=0,r=255,b=0,start = 0, end = num_lights)
		led.update()
		time.sleep(2.0)
		led.all_off()
		led.update()
		#anim = darcyAnim(led)
		#anim.run()



except KeyboardInterrupt:
    led.all_off()
    led.update()
